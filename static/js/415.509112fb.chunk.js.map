{"version":3,"file":"static/js/415.509112fb.chunk.js","mappings":"oNAGaA,EAAYC,EAAAA,EAAAA,IAAH,6DAKTC,EAAOD,EAAAA,EAAAA,GAAH,+NAaJE,GAAaF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,kDAGVI,EAAOJ,EAAAA,EAAAA,GAAH,0UAWJK,EAAML,EAAAA,EAAAA,IAAH,0HAOHM,EAAON,EAAAA,EAAAA,EAAH,4M,mBChCJO,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACX,EAAD,WACE,SAACE,EAAD,UACGO,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACV,SAACX,EAAD,WACE,UAACF,EAAD,CACEU,GAAE,UAAKA,GACPI,GAAE,kBAAaJ,GACfK,MAAO,CAAEC,KAAMT,GAHjB,WAKE,SAACJ,EAAD,CAAKc,IAXD,kCAWgBN,EAAaO,IAAG,OAAEN,QAAF,IAAEA,EAAAA,EAASC,KAC/C,UAACT,EAAD,kBAAOQ,QAAP,IAAOA,EAAAA,EAASC,EAAhB,WAPJ,UAAcH,GADJ,OAenB,C,gFC7BYS,E,QAAOrB,EAAAA,KAAH,kE,SCCV,SAASsB,IACd,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,YAAY,UACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,mICsBD,UA9Ba,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOpB,EAAP,KAAeqB,EAAf,KACA,GAAgCD,EAAAA,EAAAA,WAAS,GAAzC,eAAOE,EAAP,KAAiBC,EAAjB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRH,GAAY,GACZ,IAAMI,EAAa,mCAAG,gHAEQC,EAAAA,EAAAA,MAFR,gBAEVC,EAFU,EAEVA,QACRR,EAAUQ,GAHQ,gDAKlBJ,EAAS,KAAMK,SALG,yBAOlBP,GAAY,GAPM,4EAAH,qDAUnBI,GACD,GAAE,KAGD,iCACE,SAAC,IAAD,CAAW3B,OAAQA,IAClBsB,IAAY,SAAC,IAAD,IACZE,IACC,SAAC,IAAD,CAAUO,SAAQ,wDAIzB,C,mMClCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAML,EAAgB,mCAAG,sGACPI,EAAAA,EAAAA,IAAA,qBADO,uBACtBE,EADsB,EACtBA,KACRC,QAAQC,IAAIF,GAFkB,kBAGvBA,GAHuB,2CAAH,qDAMhBG,EAAW,mCAAG,WAAMC,GAAN,yFACFN,EAAAA,EAAAA,IAAA,0EACuCM,IAFrC,uBACjBJ,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,sDAOXK,EAAe,mCAAG,WAAMnC,GAAN,yFACN4B,EAAAA,EAAAA,IAAA,iBAAoB5B,EAApB,oBADM,uBACrB8B,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfM,EAAO,mCAAG,WAAMpC,GAAN,yFACE4B,EAAAA,EAAAA,IAAA,iBAAoB5B,EAApB,4BADF,uBACb8B,EADa,EACbA,KADa,kBAGdA,GAHc,2CAAH,sDAMPO,EAAU,mCAAG,WAAMrC,GAAN,yFACD4B,EAAAA,EAAAA,IAAA,iBACX5B,EADW,oCADC,uBAChB8B,EADgB,EAChBA,KADgB,kBAKjBA,GALiB,2CAAH,qD","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Spinner/Spinner.styled.jsx","components/Spinner/Spinner.jsx","pages/Home.jsx","service/ApiGet.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n  max-width: calc(100vw - 48px);\n\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n`;\nexport const Item = styled.li`\n  max-width: 300px;\n  max-height: 450px;\n  border-radius: 10px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.04);\n  }\n`;\nexport const Img = styled.img`\n  max-width: 300px;\n  max-height: 400px;\n  object-fit: cover;\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const Text = styled.p`\n  padding: 10px;\n\n  font-size: 14px;\n  font-weight: 600;\n  color: #9d99cd68;\n  transition: color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: #99a4f7;\n  }\n`;\n","import {\n  Container,\n  List,\n  Item,\n  Img,\n  Text,\n  StyledLink,\n} from 'components/MovieList/MovieList.styled.jsx';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  const Img_url = 'https://image.tmdb.org/t/p/w500';\n  return (\n    <Container>\n      <List>\n        {movies.map(({ id, poster_path, title, name }) => (\n          <Item key={`${id}`}>\n            <StyledLink\n              id={`${id}`}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              <Img src={Img_url + poster_path} alt={title ?? name} />\n              <Text>{title ?? name} </Text>\n            </StyledLink>\n          </Item>\n        ))}\n      </List>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Chip = styled.span`\n  display: grid;\n  place-items: center;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { Chip } from './Spinner.styled';\n\nexport function Spinner() {\n  return (\n    <Chip>\n      <RotatingLines\n        strokeColor=\"#99a4f7\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"70\"\n        visible={true}\n      />\n    </Chip>\n  );\n}\n","import { movieTrendingGet } from 'service/ApiGet';\nimport { useState, useEffect } from 'react';\n\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport { NotFound } from 'components/NotFound/NotFound';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoader, setIsLoader] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoader(true);\n    const movieTrending = async () => {\n      try {\n        const { results } = await movieTrendingGet();\n        setMovies(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoader(false);\n      }\n    };\n    movieTrending();\n  }, []);\n\n  return (\n    <>\n      <MovieList movies={movies} />\n      {isLoader && <Spinner />}\n      {error && (\n        <NotFound children={`Something went wrong Try again later.ðŸ˜­`} />\n      )}\n    </>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '1174e437242bb46ea8831e578adaacd1',\n};\n\nexport const movieTrendingGet = async () => {\n  const { data } = await axios.get(`/trending/all/day`);\n  console.log(data);\n  return data;\n};\n\nexport const movieSearch = async searchQuery => {\n  const { data } = await axios.get(`\n/search/movie?language=en-US&page=1&include_adult=false&query=${searchQuery}`);\n\n  return data;\n};\n\nexport const movieDetailsGet = async id => {\n  const { data } = await axios.get(`/movie/${id}?language=en-US`);\n\n  return data;\n};\n\nexport const castGet = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?language=en-US`);\n\n  return data;\n};\n\nexport const reviewsGet = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?language=en-US&page=1 `\n  );\n\n  return data;\n};\n"],"names":["Container","styled","List","StyledLink","NavLink","Item","Img","Text","MovieList","movies","location","useLocation","map","id","poster_path","title","name","to","state","from","src","alt","Chip","Spinner","strokeColor","strokeWidth","animationDuration","width","visible","useState","setMovies","isLoader","setIsLoader","error","setError","useEffect","movieTrending","movieTrendingGet","results","message","children","axios","api_key","data","console","log","movieSearch","searchQuery","movieDetailsGet","castGet","reviewsGet"],"sourceRoot":""}