{"version":3,"file":"static/js/691.abbfffba.chunk.js","mappings":"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","sources":["Service/ApiGet.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Spinner/Spinner.styled.jsx","components/Spinner/Spinner.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '1174e437242bb46ea8831e578adaacd1',\n};\n\nexport const movieTrendingGet = async () => {\n  const { data } = await axios.get(`/trending/all/day`);\n\n  return data;\n};\n\nexport const movieSearch = async searchQuery => {\n  const { data } = await axios.get(`\n/search/movie?language=en-US&page=1&include_adult=false&query=${searchQuery}`);\n\n  return data;\n};\n\nexport const movieDetailsGet = async id => {\n  const { data } = await axios.get(`/movie/${id}?language=en-US`);\n\n  return data;\n};\n\nexport const castGet = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?language=en-US`);\n\n  return data;\n};\n\nexport const reviewsGet = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?language=en-US&page=1 `\n  );\n\n  return data;\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n  max-width: calc(100vw - 48px);\n\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n`;\nexport const Item = styled.li`\n  width: 300px;\n  height: 450px;\n  border-radius: 10px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.04);\n  }\n`;\nexport const Img = styled.img`\n  width: 300px;\n  height: 400px;\n  object-fit: cover;\n  border-radius: 10px 10px 0 0;\n`;\n\nexport const Text = styled.p`\n  padding: 10px;\n\n  font-size: 14px;\n  font-weight: 600;\n  color: #9d99cd68;\n  transition: color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: #99a4f7;\n  }\n`;\n","import {\n  Container,\n  List,\n  Item,\n  Img,\n  Text,\n  StyledLink,\n} from 'components/MovieList/MovieList.styled.jsx';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  const Img_url = 'https://image.tmdb.org/t/p/w500';\n  return (\n    <Container>\n      <List>\n        {movies.map(({ id, poster_path, title, name }) => (\n          <Item key={`${id}`}>\n            <StyledLink\n              id={`${id}`}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              <Img src={Img_url + poster_path} alt={title ?? name} />\n              <Text>{title ?? name} </Text>\n            </StyledLink>\n          </Item>\n        ))}\n      </List>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Chip = styled.span`\n  display: grid;\n  place-items: center;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { Chip } from './Spinner.styled';\n\nexport function Spinner() {\n  return (\n    <Chip>\n      <RotatingLines\n        strokeColor=\"#99a4f7\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"70\"\n        visible={true}\n      />\n    </Chip>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  width: 100%;\n  max-width: 450px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  svg {\n    width: 22px;\n    height: 22px;\n  }\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { MovieList } from 'components/MovieList/MovieList';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { movieSearch } from 'Service/ApiGet';\nimport {\n  Input,\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoader, setIsLoader] = useState(false);\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    if (searchParams.get('searchQuery') === null) return;\n    const searchTitle = searchParams.get('searchQuery');\n    setIsLoader(true);\n    async function MoviesQuery() {\n      try {\n        const { results } = await movieSearch(searchTitle);\n        setMovies(results);\n      } catch (error) {\n      } finally {\n        setIsLoader(false);\n      }\n    }\n\n    MoviesQuery();\n  }, [searchParams]);\n\n  const handleOnChange = evt => {\n    setQuery(evt.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      alert('спробуй ще ');\n      return;\n    }\n    setSearchParams({ searchQuery: query });\n\n    setQuery('');\n  };\n\n  return (\n    <>\n      <section>\n        <SearchForm onSubmit={handleSubmit}>\n          <Input\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            name=\"searchQuery\"\n            value={query}\n            onChange={handleOnChange}\n          />\n          <SearchFormButton type=\"submit\">\n            Search\n            <SearchFormButtonLabel></SearchFormButtonLabel>\n          </SearchFormButton>\n        </SearchForm>\n      </section>\n      {movies && <MovieList movies={movies} />}\n      {isLoader && <Spinner />}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["axios","api_key","movieTrendingGet","data","movieSearch","searchQuery","movieDetailsGet","id","castGet","reviewsGet","Container","styled","List","StyledLink","NavLink","Item","Img","Text","MovieList","movies","location","useLocation","map","poster_path","title","name","to","state","from","src","alt","Chip","Spinner","strokeColor","strokeWidth","animationDuration","width","visible","SearchForm","SearchFormButton","SearchFormButtonLabel","Input","useSearchParams","searchParams","setSearchParams","useState","isLoader","setIsLoader","query","setQuery","setMovies","useEffect","get","searchTitle","MoviesQuery","results","onSubmit","e","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","value","onChange","evt","target"],"sourceRoot":""}