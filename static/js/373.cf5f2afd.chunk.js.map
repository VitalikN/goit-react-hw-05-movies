{"version":3,"file":"static/js/373.cf5f2afd.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAgB,mCAAG,sGACPF,EAAAA,EAAAA,IAAA,qBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAGvBA,GAHuB,2CAAH,qDAMhBC,EAAW,mCAAG,WAAMC,GAAN,yFACFL,EAAAA,EAAAA,IAAA,0EACuCK,IAFrC,uBACjBF,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,sDAOXG,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfK,EAAO,mCAAG,WAAMD,GAAN,yFACEP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,4BADF,uBACbJ,EADa,EACbA,KADa,kBAGdA,GAHc,2CAAH,sDAMPM,EAAU,mCAAG,WAAMF,GAAN,yFACDP,EAAAA,EAAAA,IAAA,iBACXO,EADW,oCADC,uBAChBJ,EADgB,EAChBA,KADgB,kBAKjBA,GALiB,2CAAH,qD,gFC9BVO,E,QAAOC,EAAAA,KAAH,kE,SCCV,SAASC,IACd,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,YAAY,UACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,6LCZYC,EAAYP,EAAAA,EAAAA,IAAH,iEAITQ,EAAMR,EAAAA,EAAAA,IAAH,8LAUHS,EAAQT,EAAAA,EAAAA,GAAH,uLASLU,EAAUV,EAAAA,EAAAA,GAAH,uLASPW,EAAOX,EAAAA,EAAAA,EAAH,iKAQJY,EAAOZ,EAAAA,EAAAA,GAAH,0CAGJa,EAAOb,EAAAA,EAAAA,GAAH,uMAWJc,GAAad,EAAAA,EAAAA,GAAOe,EAAAA,GAAPf,CAAH,wQAcVgB,EAAWhB,EAAAA,EAAAA,GAAH,iOCpERc,GAAad,EAAAA,EAAAA,GAAOe,EAAAA,GAAPf,CAAH,qP,SCDViB,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OAAO,SAAC,EAAD,CAAYD,GAAIA,EAAhB,SAAqBC,GAC7B,E,UC0FD,EA7EqB,WAAO,IAAD,QACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,WACR,GAAKZ,EAAL,CACAM,GAAY,GACZ,IAAMO,EAAgB,mCAAG,8GAEFtC,EAAAA,EAAAA,IAAgByB,GAFd,OAEf5B,EAFe,OAGrBgC,EAAShC,GAHY,sEAMrBkC,GAAY,GANS,0EAAH,qDAStBO,GAXoB,CAYrB,GAAE,CAACb,IAEJ,IACExB,EAQE2B,EARF3B,GACAsC,EAOEX,EAPFW,KACAC,EAMEZ,EANFY,MACAC,EAKEb,EALFa,YACAC,EAIEd,EAJFc,aACAC,EAGEf,EAHFe,SACAC,EAEEhB,EAFFgB,OACAC,EACEjB,EADFiB,aAIF,OACE,gCACE,SAACvB,EAAD,CAAUC,GAAIW,EAAd,+BACCJ,IAAY,SAACxB,EAAA,EAAD,KACb,UAACM,EAAD,CAAWX,GAAIA,EAAf,WACE,0BACE,SAACY,EAAD,CAAKiC,IARG,kCAQYL,EAAaM,IAAG,OAAER,QAAF,IAAEA,EAAAA,EAAQC,OAEhD,4BACE,UAAC1B,EAAD,kBACGyB,QADH,IACGA,EAAAA,EAAQC,EADX,IACmBE,GAAY,WAAQM,SAASN,GAAjB,SAE/B,UAAC3B,EAAD,0BAAsBkC,KAAKC,MAAqB,GAAfL,GAAjC,QACA,SAAC9B,EAAD,wBACA,SAACC,EAAD,UAAO2B,KACP,SAAC5B,EAAD,uBACA,SAACE,EAAD,UACG2B,GACCA,EAAOO,KAAI,gBAAGlD,EAAH,EAAGA,GAAIsC,EAAP,EAAOA,KAAP,OAAkB,SAACrB,EAAD,UAAgBqB,GAALtC,EAA7B,OAGf,UAACoB,EAAD,YACE,yBACE,SAACF,EAAD,CAAYI,GAAG,OAAOY,MAAO,CAAEC,KAAI,UAAEJ,EAASG,aAAX,aAAE,EAAgBC,MAArD,qBAIF,yBACE,SAACjB,EAAD,CAAYI,GAAG,UAAUY,MAAO,CAAEC,KAAI,UAAEJ,EAASG,aAAX,aAAE,EAAgBC,MAAxD,iCAQR,SAAC,EAAAgB,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C","sources":["Service/ApiGet.jsx","components/Spinner/Spinner.styled.jsx","components/Spinner/Spinner.jsx","pages/MovieDetails/MovieDetails.styled.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '1174e437242bb46ea8831e578adaacd1',\n};\n\nexport const movieTrendingGet = async () => {\n  const { data } = await axios.get(`/trending/all/day`);\n\n  return data;\n};\n\nexport const movieSearch = async searchQuery => {\n  const { data } = await axios.get(`\n/search/movie?language=en-US&page=1&include_adult=false&query=${searchQuery}`);\n\n  return data;\n};\n\nexport const movieDetailsGet = async id => {\n  const { data } = await axios.get(`/movie/${id}?language=en-US`);\n\n  return data;\n};\n\nexport const castGet = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?language=en-US`);\n\n  return data;\n};\n\nexport const reviewsGet = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?language=en-US&page=1 `\n  );\n\n  return data;\n};\n","import styled from '@emotion/styled';\n\nexport const Chip = styled.span`\n  display: grid;\n  place-items: center;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { Chip } from './Spinner.styled';\n\nexport function Spinner() {\n  return (\n    <Chip>\n      <RotatingLines\n        strokeColor=\"#99a4f7\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"70\"\n        visible={true}\n      />\n    </Chip>\n  );\n}\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 25px 40px;\n`;\nexport const Img = styled.img`\n  width: 300px;\n  height: 500px;\n  margin-right: 20px;\n  transition: transform 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.04);\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 35px;\n  font-weight: 700;\n  margin: 20px 10px;\n  transition: color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    color: #99a4f7;\n  }\n`;\nexport const Subject = styled.h2`\n  font-size: 25px;\n  font-weight: 700;\n  margin: 15px 10px;\n  transition: color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    color: #99a4f7;\n  }\n`;\nexport const Text = styled.p`\n  font-size: 20px;\n  font-weight: 400;\n  transition: color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    color: #99a4f7;\n  }\n`;\nexport const List = styled.ul`\n  display: flex;\n`;\nexport const Item = styled.li`\n  list-style: none;\n  font-size: 20px;\n  font-weight: 400;\n  margin: 10px;\n  transition: color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    color: #99a4f7;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: #9d99cd68;\n  /* margin: 25px; */\n  padding: 25px;\n  font-size: 25px;\n  font-weight: 700;\n  text-decoration: none;\n  transition: color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.active,\n  &:hover {\n    color: #99a4f7;\n  }\n`;\nexport const ListLink = styled.ul`\n  display: flex;\n  transition: color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.active,\n  &:hover {\n    color: #99a4f7;\n  }\n  justify-content: start;\n  align-items: center;\n  list-style: none;\n`;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  padding: 20px;\n  margin: 20px;\n  font-size: 20px;\n  font-weight: 600;\n  color: #9d99cd68;\n  transition: color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: #99a4f7;\n  }\n`;\n","import { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return <StyledLink to={to}>{children}</StyledLink>;\n};\n","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport { movieDetailsGet } from 'Service/ApiGet';\nimport {\n  Container,\n  Img,\n  Title,\n  Subject,\n  Text,\n  List,\n  ListLink,\n  Item,\n  StyledLink,\n} from './MovieDetails.styled';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setmovie] = useState([]);\n  const [isLoader, setIsLoader] = useState(false);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    if (!movieId) return;\n    setIsLoader(true);\n    const MovieDetailsList = async () => {\n      try {\n        const data = await movieDetailsGet(movieId);\n        setmovie(data);\n      } catch (error) {\n      } finally {\n        setIsLoader(false);\n      }\n    };\n    MovieDetailsList();\n  }, [movieId]);\n\n  const {\n    id,\n    name,\n    title,\n    poster_path,\n    release_date,\n    overview,\n    genres,\n    vote_average,\n  } = movie;\n  const Img_url = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <section>\n      <BackLink to={backLinkHref}>Go back to movies</BackLink>\n      {isLoader && <Spinner />}\n      <Container id={id}>\n        <div>\n          <Img src={Img_url + poster_path} alt={name ?? title} />\n        </div>\n        <div>\n          <Title>\n            {name ?? title} {release_date && `(${parseInt(release_date)})`}\n          </Title>\n          <Subject>User score: {Math.round(vote_average * 10)}%</Subject>\n          <Subject>Overview</Subject>\n          <Text>{overview}</Text>\n          <Subject>Genres:</Subject>\n          <List>\n            {genres &&\n              genres.map(({ id, name }) => <Item key={id}>{name}</Item>)}\n          </List>\n\n          <ListLink>\n            <li>\n              <StyledLink to=\"cast\" state={{ from: location.state?.from }}>\n                Cast\n              </StyledLink>\n            </li>\n            <li>\n              <StyledLink to=\"reviews\" state={{ from: location.state?.from }}>\n                Reviews\n              </StyledLink>\n            </li>\n          </ListLink>\n        </div>\n      </Container>\n\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </section>\n  );\n};\nexport default MovieDetails;\n"],"names":["axios","api_key","movieTrendingGet","data","movieSearch","searchQuery","movieDetailsGet","id","castGet","reviewsGet","Chip","styled","Spinner","strokeColor","strokeWidth","animationDuration","width","visible","Container","Img","Title","Subject","Text","List","Item","StyledLink","NavLink","ListLink","BackLink","to","children","movieId","useParams","useState","movie","setmovie","isLoader","setIsLoader","location","useLocation","backLinkHref","state","from","useEffect","MovieDetailsList","name","title","poster_path","release_date","overview","genres","vote_average","src","alt","parseInt","Math","round","map","Suspense","fallback"],"sourceRoot":""}